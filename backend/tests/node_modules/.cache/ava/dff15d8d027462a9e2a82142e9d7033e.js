'use strict';

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const request = require('supertest');
const app = require('../app');
const DB = require('../models/Database');

// The awaited results
const getCharacters = require('./results/characters/get-characters.json');
const getCharacterOne = require('./results/characters/get-characters-1.json');
const postCharacter = require('./results/characters/post-characters.json');
const deleteCharacter = require('./results/characters/delete-characters-1.json');
const putCharacter = require('./results/characters/put-characters-1.json');
const sql = DB.sql('../dumps/data-tests.sql');

_ava2.default.serial('Characters - GET - Get all characters', t => {
  return DB.accessor.query(sql).then(() => {
    return request(app).get('/characters').then(res => {
      t.is(res.status, 200);
      t.deepEqual(res.body, getCharacters.result);
    });
  }).catch(error => {
    throw error;
  });
});

_ava2.default.serial('Characters - GET - Get character id ' + getCharacterOne.parameters.id, t => {
  return DB.accessor.query(sql).then(() => {
    return request(app).get('/characters/' + getCharacterOne.parameters.id).then(res => {
      t.is(res.status, 200);
      t.deepEqual(res.body, getCharacterOne.result);
    });
  }).catch(error => {
    throw error;
  });
});

_ava2.default.serial('Characters - POST - Create Character', t => {
  return DB.accessor.query(sql).then(() => {
    return request(app).post('/characters/').send(postCharacter.body).then(res => {
      t.is(res.status, 200);
      t.deepEqual(res.body, postCharacter.result);
    });
  }).catch(error => {
    throw error;
  });
});

_ava2.default.serial('Characters - DELETE - Delete Character with id ' + deleteCharacter.parameters.id, t => {
  return DB.accessor.query(sql).then(() => {
    return request(app).delete('/characters/' + deleteCharacter.parameters.id).then(res => {
      t.is(res.status, 200);
      t.deepEqual(res.body, deleteCharacter.result);
    });
  }).catch(error => {
    throw error;
  });
});

_ava2.default.serial('Characters - PUT - Update Character with id ' + putCharacter.parameters.id, t => {
  return DB.accessor.query(sql).then(() => {
    return request(app).put('/characters/' + putCharacter.parameters.id).send(putCharacter.body).then(res => {
      t.is(res.status, 200);
      t.deepEqual(res.body, putCharacter.result);
    });
  }).catch(error => {
    throw error;
  });
});
//# sourceMappingURL=node_modules/.cache/ava/dff15d8d027462a9e2a82142e9d7033e.js.map